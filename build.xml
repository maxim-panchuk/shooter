<?xml version = "1.0"?>
<project name="misipi-3" default="compile" xmlns:ivy="antlib:org.apache.ivy.ant">

    <property file="temps.properties"/>

    <target name="compile" depends="clean" description="Компиляция">
        <mkdir dir="${build.classes}"/>
        <javac srcdir="${src}" destdir="${build.classes}" includeantruntime="false">
            <classpath path="${lib}">
                <fileset dir="${lib}" includes="*.jar"/>
            </classpath>
        </javac>
        <copy todir="${build.classes}">
            <fileset dir="${resources}"/>
        </copy>
        <mkdir dir="${build}/webapp"/>
        <copy todir="${build}/webapp">
            <fileset dir="${webapp}"/>
        </copy>
    </target>

    <target name="build" depends="compile" description="компиляция исходных кодов проекта и их упаковка в исполняемый jar-архив.
    Компиляцию исходных кодов реализовать посредством вызова цели compile">
        <jar destfile="${build}/${app.name}.jar" basedir="${build.classes}">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
                <attribute name="Version" value="1.0.0"/>
                <attribute name="Created-By" value="Maks"/>
            </manifest>
    </jar>
    </target>

    <target name="test" depends="build" description="запуск junit-тестов проекта. Перед запуском тестов необходимо
    осуществить сборку проекта (цель build)">
        <mkdir dir="${build.tests}"/>
        <javac srcdir="${src.test}" destdir="${build.tests}" includeantruntime="false">
            <classpath path="${lib}">
                <pathelement path="${build.classes}"/>
                <fileset dir="${lib}" includes="*.jar"/>
            </classpath>
        </javac>

        <junit printsummary="on">
            <formatter type="brief" usefile="false"/>
            <classpath>
                <pathelement path="${junit}"/>
                <pathelement path="${build.classes}"/>
                <pathelement path="${build.tests}"/>
                <pathelement path="${hamcrest}"/>
            </classpath>
            <test name="com.panchuk.shooter.business.test.PointServiceTest"/>
        </junit>
    </target>




    <target name="clean"
            description="удаление скомпилированных классов проекта и всех временных файлов (если они есть)">
        <delete dir="build"/>
    </target>

    <target name="resolve" description="--> retreive dependencies with ivy">
        <ivy:retrieve/>
    </target>
</project>